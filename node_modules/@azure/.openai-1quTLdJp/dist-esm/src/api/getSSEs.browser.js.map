{"version":3,"file":"getSSEs.browser.js","sourceRoot":"","sources":["../../../src/api/getSSEs.browser.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AACtC,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,MAAM,CAAC,KAAK,UAAU,SAAS,CAC7B,QAAqC;IAErC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,CAAC,eAAe,EAAE,CAAC;IAC1D,IAAI,MAAM,KAAK,KAAK,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;QAC3C,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,6BAA6B,CAAC,CAAC;IAC/E,CAAC;IAED,IAAI,CAAC,IAAI;QAAE,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;IAC7F,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StreamableMethod } from \"@azure-rest/core-client\";\nimport { wrapError } from \"./util.js\";\nimport { streamToText } from \"./readableStreamUtils.js\";\n\nexport async function getStream<TResponse>(\n  response: StreamableMethod<TResponse>,\n): Promise<ReadableStream<Uint8Array>> {\n  const { body, status } = await response.asBrowserStream();\n  if (status !== \"200\" && body !== undefined) {\n    const text = await streamToText(body);\n    throw wrapError(() => JSON.parse(text).error, \"Error parsing response body\");\n  }\n\n  if (!body) throw new Error(\"No stream found in response. Did you enable the stream option?\");\n  return body;\n}\n"]}